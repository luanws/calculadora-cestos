{"version":3,"sources":["src/res/colors.ts","src/components/ButtonText/styles.ts","src/components/ButtonText/ButtonText.tsx","src/pages/Home/Home.tsx","src/components/NumberInput/styles.ts","src/components/NumberInput/NumberInput.tsx","src/components/ShowNumber/styles.ts","src/components/ShowNumber/ShowNumber.tsx","src/models/SquareBasket.ts","src/pages/CalculatorSquareBasket/styles.ts","src/pages/CalculatorSquareBasket/CalculatorSquareBasket.tsx","src/models/CircularBasket.ts","src/pages/CalculatorCircularBasket/styles.ts","src/pages/CalculatorCircularBasket/CalculatorCircularBasket.tsx","src/routes.tsx","App.tsx","web-build/register-service-worker.js"],"names":["colors","primary","primaryLight","primaryDark","dark","background","transparent","success","successLight","successDark","info","infoLight","infoDark","warning","warningLight","warningDark","danger","dangerLight","dangerDark","styles","StyleSheet","create","button","backgroundColor","borderColor","borderRadius","padding","margin","color","alignItems","borderWidth","textButton","fontSize","ButtonText","props","TouchableOpacity","onPress","activeOpacity","style","Text","children","Home","navigation","useNavigation","SafeAreaView","ScrollView","View","navigate","textInput","paddingHorizontal","text","containerText","marginBottom","zIndex","marginLeft","NumberInput","flexDirection","justifyContent","inputName","TextInput","placeholder","keyboardType","value","onChangeText","onChangeNumber","replace","Number","stringToNumber","containerName","textName","containerValue","paddingTop","textValue","fontWeight","containerUnit","textUnit","fontStyle","icon","marginRight","marginVertical","noneType","moneyType","timeType","weightType","ShowNumber","styleType","type","getStyleType","getIconType","AntDesign","name","size","FontAwesome5","FontAwesome","Entypo","marginTop","top","undefined","unit","SquareBasket","_side1","_side2","_height","_baseArea","_sideArea","_totalArea","_wireWeight","_estimulatedTime","_realTime","_wirePrice","_laborPrice","_totalWithoutProfit","_maxPrice","price","this","Math","max","getMaxPrice","calculate","containerShowNumber","CalculatorSquareBasket","useState","side1","setSide1","side2","setSide2","height","setHeight","baseArea","setBaseArea","sideArea","setSideArea","totalArea","setTotalArea","wireWeight","setWireWeight","estimulatedTime","setEstimulatedTime","setRealTime","wirePrice","setWirePrice","laborPrice","setLaborPrice","totalWithoutProfit","setTotalWithoutProfit","maxPrice","setMaxPrice","squareBasket","maskNumber","n","String","toFixed","useEffect","realTime","CircularBasket","_diameter","PI","CalculatorCircularBasket","diameter","setDiameter","circularBasket","Stack","createStackNavigator","Routes","NavigationContainer","Navigator","screenOptions","headerTintColor","headerStyle","cardStyle","Screen","component","options","title","App","StatusBar","navigator","window","addEventListener","serviceWorker","register","scope","then","catch","error","console"],"mappings":"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","file":"static/js/app.e77ab5d8.chunk.js","sourcesContent":["const colors = {\r\n    primary: '#0275d8',\r\n    primaryLight: '#5fa3ff',\r\n    primaryDark: '#004aa6',\r\n\r\n    dark: '#282a36',\r\n    background: '#fafafa',\r\n    transparent: '#ffffff00',\r\n\r\n    success: '#5cb85c',\r\n    successLight: '#8feb8b',\r\n    successDark: '#26872f',\r\n    info: '#5bc0de',\r\n    infoLight: '#91f3ff',\r\n    infoDark: '#1490ac',\r\n    warning: '#f0ad4e',\r\n    warningLight: '#ffdf7d',\r\n    warningDark: '#ba7e1d',\r\n    danger: '#d9534f',\r\n    dangerLight: '#ff847b',\r\n    dangerDark: '#a21e27',\r\n}\r\n\r\nexport default colors","import React from 'react'\r\nimport { StyleSheet } from 'react-native'\r\n\r\nimport colors from '../../res/colors'\r\n\r\nconst styles = StyleSheet.create({\r\n    button: {\r\n        backgroundColor: colors.primary,\r\n        borderColor: colors.primaryDark,\r\n        borderRadius: 5,\r\n        padding: 32,\r\n        margin: 8,\r\n        color: 'white',\r\n        alignItems: 'center',\r\n        borderWidth: 2,\r\n    },\r\n    textButton: {\r\n        color: 'white',\r\n        fontSize: 15\r\n    }\r\n})\r\n\r\nexport default styles","import React from 'react'\r\nimport { TouchableOpacity, Text } from 'react-native'\r\n\r\nimport styles from './styles'\r\n\r\ninterface Props {\r\n    onPress: () => void\r\n}\r\n\r\nconst ButtonText: React.FC<Props> = (props) => {\r\n\r\n    return (\r\n        <TouchableOpacity\r\n            onPress={() => props.onPress()}\r\n            activeOpacity={0.8}\r\n            style={styles.button}\r\n        >\r\n            <Text style={styles.textButton}>{props.children}</Text>\r\n        </TouchableOpacity >\r\n    )\r\n}\r\n\r\nexport default ButtonText","import React from 'react'\r\nimport { View, ScrollView, SafeAreaView } from 'react-native'\r\nimport { useNavigation } from '@react-navigation/native'\r\nimport ButtonText from '../../components/ButtonText/ButtonText'\r\n\r\nimport styles from './styles'\r\n\r\nconst Home = () => {\r\n    const navigation = useNavigation()\r\n\r\n    function navigateCalculatorSquareBasket() {\r\n        navigation.navigate('CalculatorSquareBasket')\r\n    }\r\n\r\n    function navigateCalculatorCircularBasket() {\r\n        navigation.navigate('CalculatorCircularBasket')\r\n    }\r\n\r\n    return (\r\n        <SafeAreaView>\r\n            <ScrollView>\r\n                <View>\r\n                    <ButtonText onPress={navigateCalculatorCircularBasket}>Cestos circulares</ButtonText>\r\n                    <ButtonText onPress={navigateCalculatorSquareBasket}>Cestos quadrados</ButtonText>\r\n                </View>\r\n            </ScrollView>\r\n        </SafeAreaView>\r\n    )\r\n}\r\n\r\nexport default Home","import React from 'react'\r\nimport { StyleSheet } from 'react-native'\r\n\r\nimport colors from '../../res/colors'\r\n\r\nconst styles = StyleSheet.create({\r\n    textInput: {\r\n        backgroundColor: colors.transparent,\r\n        borderColor: colors.primary,\r\n        borderWidth: 2,\r\n        borderRadius: 5,\r\n        padding: 8,\r\n        paddingHorizontal: 16,\r\n    },\r\n    text: {\r\n        color: colors.primary,\r\n    },\r\n    containerText: {\r\n        backgroundColor: colors.background,\r\n        marginBottom: -10,\r\n        zIndex: 1,\r\n        marginLeft: 8,\r\n        paddingHorizontal: 8,\r\n    }\r\n})\r\n\r\nexport default styles","import React from 'react'\r\nimport { TextInput, View, Text } from 'react-native'\r\n\r\nimport styles from './styles'\r\n\r\ninterface Props {\r\n    placeholder?: string,\r\n    inputName: string,\r\n    value?: string,\r\n    onChangeNumber?: (n: number) => void\r\n}\r\n\r\nconst NumberInput: React.FC<Props> = (props) => {\r\n    function stringToNumber(text: string): number {\r\n        text = text.replace(',', '.')\r\n        return Number(text)\r\n    }\r\n\r\n    return (\r\n        <View>\r\n            <View style={{\r\n                flexDirection: 'row',\r\n                justifyContent: 'flex-start',\r\n                zIndex: 1\r\n            }}>\r\n                <View style={styles.containerText}>\r\n                    <Text style={styles.text}>{props.inputName}</Text>\r\n                </View>\r\n            </View>\r\n            <TextInput\r\n                style={styles.textInput}\r\n                placeholder={props.placeholder ? props.placeholder : props.inputName}\r\n                keyboardType=\"numeric\"\r\n                value={props.value}\r\n                onChangeText={text => { if (props.onChangeNumber) props.onChangeNumber(stringToNumber(text)) }}\r\n            />\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default NumberInput","import React from 'react'\r\nimport { StyleSheet } from 'react-native'\r\n\r\nimport colors from '../../res/colors'\r\n\r\nconst styles = StyleSheet.create({\r\n    containerName: {\r\n        marginBottom: -10,\r\n        zIndex: 1,\r\n        marginLeft: 8,\r\n        paddingHorizontal: 8,\r\n        borderRadius: 3,\r\n        flexDirection: 'row',\r\n    },\r\n    textName: {\r\n        color: 'white',\r\n    },\r\n    containerValue: {\r\n        borderRadius: 5,\r\n        paddingTop: 12,\r\n        padding: 8,\r\n        paddingHorizontal: 16,\r\n        flexDirection: \"row\"\r\n    },\r\n    textValue: {\r\n        color: 'white',\r\n        fontSize: 20,\r\n        fontWeight: 'bold'\r\n    },\r\n    containerUnit: {\r\n        justifyContent: 'flex-end'\r\n    },\r\n    textUnit: {\r\n        color: 'white',\r\n        fontSize: 15,\r\n        fontStyle: 'italic'\r\n    },\r\n    icon: {\r\n        marginRight: 8,\r\n        marginVertical: 4\r\n    },\r\n    noneType: {\r\n        backgroundColor: colors.primaryDark,\r\n    },\r\n    moneyType: {\r\n        backgroundColor: colors.successDark\r\n    },\r\n    timeType: {\r\n        backgroundColor: colors.dangerDark\r\n    },\r\n    weightType: {\r\n        backgroundColor: colors.warningDark\r\n    },\r\n})\r\n\r\nexport default styles","import React from 'react'\r\nimport { View, Text, StyleProp, ViewStyle } from 'react-native'\r\nimport { AntDesign, FontAwesome5, FontAwesome, Entypo } from '@expo/vector-icons';\r\n\r\nimport styles from './styles'\r\n\r\ninterface Props {\r\n    top?: boolean\r\n    name: string\r\n    unit?: string\r\n    type?: 'none' | 'money' | 'time' | 'weight'\r\n}\r\n\r\nconst ShowNumber: React.FC<Props> = (props) => {\r\n    const styleType = getStyleType()\r\n    const IconType = getIconType()\r\n\r\n    function getIconType() {\r\n        switch (props.type) {\r\n            case 'time':\r\n                return <AntDesign style={styles.icon} name=\"clockcircle\" size={16} color=\"white\" />\r\n            case 'weight':\r\n                return <FontAwesome5 style={styles.icon} name=\"weight-hanging\" size={16} color=\"white\" />\r\n            case 'money':\r\n                return <FontAwesome style={styles.icon} name=\"money\" size={16} color=\"white\" />\r\n            default:\r\n                return <Entypo style={styles.icon} name=\"ruler\" size={16} color=\"white\" />\r\n        }\r\n    }\r\n\r\n    function getStyleType() {\r\n        switch (props.type) {\r\n            case 'money':\r\n                return styles.moneyType\r\n            case 'time':\r\n                return styles.timeType\r\n            case 'weight':\r\n                return styles.weightType\r\n            default:\r\n                return styles.noneType\r\n        }\r\n    }\r\n\r\n    return (\r\n        <View style={{ marginTop: props.top ? undefined : 8 }}>\r\n            <View style={{\r\n                flexDirection: 'row',\r\n                justifyContent: 'flex-start',\r\n                zIndex: 1\r\n            }}>\r\n                <View style={[styles.containerName, styleType]}>\r\n                    {getIconType()}\r\n                    <Text style={styles.textName}>{props.name}</Text>\r\n                </View>\r\n            </View>\r\n            <View style={[styles.containerValue, styleType]}>\r\n                <Text style={styles.textValue}>{props.children}</Text>\r\n                <View style={styles.containerUnit}>\r\n                    <Text style={styles.textUnit}> {props.unit}</Text>\r\n                </View>\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default ShowNumber","class SquareBasket {\r\n    private _side1: number = 0\r\n    private _side2: number = 0\r\n    private _height: number = 0\r\n\r\n    private _baseArea: number = 0\r\n    private _sideArea: number = 0\r\n    private _totalArea: number = 0\r\n    private _wireWeight: number = 0\r\n    private _estimulatedTime: number = 0\r\n    private _realTime: number = 0\r\n    private _wirePrice: number = 0\r\n    private _laborPrice: number = 0\r\n    private _totalWithoutProfit: number = 0\r\n    private _maxPrice: number = 0\r\n\r\n    get side1(): number { return this._side1 }\r\n    get side2(): number { return this._side2 }\r\n    get height(): number { return this._height }\r\n\r\n    get baseArea(): number { return this._baseArea }\r\n    get sideArea(): number { return this._sideArea }\r\n    get totalArea(): number { return this._totalArea }\r\n    get wireWeight(): number { return this._wireWeight }\r\n    get estimulatedTime(): number { return this._estimulatedTime }\r\n    get realTime(): number { return this._realTime }\r\n    get wirePrice(): number { return this._wirePrice }\r\n    get laborPrice(): number { return this._laborPrice }\r\n    get totalWithoutProfit(): number { return this._totalWithoutProfit }\r\n    get maxPrice(): number { return this._maxPrice }\r\n\r\n    set side1(value: number) {\r\n        this._side1 = value\r\n        this.calculate()\r\n    }\r\n\r\n    set side2(value: number) {\r\n        this._side2 = value\r\n        this.calculate()\r\n    }\r\n\r\n    set height(value: number) {\r\n        this._height = value\r\n        this.calculate()\r\n    }\r\n\r\n    private getMaxPrice(price: number): number {\r\n        if (price == 0) return 0\r\n        else if (price < 6) return 12\r\n        else if (price < 10) return 15\r\n        else if (price < 12) return 18\r\n        else if (price < 15) return 22\r\n        else if (price < 18) return 28\r\n        else if (price < 22) return 32\r\n        else if (price < 25) return 35\r\n        else if (price < 30) return 40\r\n        else if (price < 35) return 45\r\n        else if (price < 40) return 50\r\n        else if (price < 45) return 55\r\n        else if (price < 48) return 60\r\n        else if (price < 52) return 65\r\n        else if (price < 55) return 70\r\n        else if (price < 58) return 75\r\n        else if (price < 62) return 80\r\n        else if (price < 66) return 85\r\n        else if (price < 70) return 90\r\n        else if (price < 74) return 95\r\n        else if (price < 80) return 100\r\n        else if (price < 84) return 105\r\n        else if (price < 88) return 110\r\n        else if (price < 92) return 115\r\n        else if (price < 96) return 120\r\n        else if (price < 100) return 125\r\n        else if (price < 104) return 130\r\n        else if (price < 108) return 140\r\n        else if (price < 108) return 135\r\n        else if (price < 112) return 140\r\n        else if (price < 116) return 145\r\n        else if (price < 120) return 150\r\n        else if (price < 124) return 155\r\n        else if (price < 128) return 160\r\n        else if (price < 132) return 165\r\n        else if (price < 136) return 170\r\n        else if (price < 140) return 175\r\n        else if (price < 144) return 180\r\n        else if (price < 148) return 185\r\n        else if (price < 152) return 190\r\n        else if (price < 156) return 195\r\n        else if (price < 160) return 200\r\n        else if (price < 164) return 205\r\n        else if (price < 168) return 210\r\n        else if (price < 172) return 215\r\n        else if (price < 176) return 220\r\n        else if (price < 180) return 225\r\n        else if (price < 184) return 230\r\n        else if (price < 188) return 235\r\n        else if (price < 192) return 240\r\n        else if (price < 196) return 245\r\n        else if (price < 200) return 250\r\n        else return price * 1.25\r\n    }\r\n\r\n    private calculate() {\r\n        this._baseArea = this._side1 * this._side2\r\n        this._sideArea = 2 * (this._side1 * this._height + this._side2 * this._height)\r\n        this._totalArea = this._baseArea + this._sideArea\r\n        this._wireWeight = this._totalArea / 2800\r\n        this._estimulatedTime = this._totalArea / 900\r\n        this._wirePrice = (this._totalArea / 2800) * 20\r\n        this._laborPrice = Math.max(this._estimulatedTime, this._realTime) * 10\r\n        this._totalWithoutProfit = this._wirePrice + this._laborPrice\r\n        this._maxPrice = this.getMaxPrice(this._totalWithoutProfit)\r\n    }\r\n}\r\n\r\nexport default SquareBasket","import React from 'react'\r\nimport { StyleSheet } from 'react-native'\r\n\r\nimport colors from '../../res/colors'\r\n\r\nconst styles = StyleSheet.create({\r\n    containerShowNumber: {\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-around\",\r\n    }\r\n})\r\n\r\nexport default styles","import React, { useState, useEffect } from 'react'\r\nimport { View, Text, ScrollView, SafeAreaView, TextInput } from 'react-native'\r\nimport NumberInput from '../../components/NumberInput/NumberInput'\r\nimport ShowNumber from '../../components/ShowNumber/ShowNumber'\r\n\r\nimport SquareBasket from '../../models/SquareBasket'\r\nimport styles from './styles'\r\n\r\nconst CalculatorSquareBasket = () => {\r\n    const [side1, setSide1] = useState(0)\r\n    const [side2, setSide2] = useState(0)\r\n    const [height, setHeight] = useState(0)\r\n\r\n    const [baseArea, setBaseArea] = useState(0)\r\n    const [sideArea, setSideArea] = useState(0)\r\n    const [totalArea, setTotalArea] = useState(0)\r\n    const [wireWeight, setWireWeight] = useState(0)\r\n    const [estimulatedTime, setEstimulatedTime] = useState(0)\r\n    const [realTime, setRealTime] = useState(0)\r\n    const [wirePrice, setWirePrice] = useState(0)\r\n    const [laborPrice, setLaborPrice] = useState(0)\r\n    const [totalWithoutProfit, setTotalWithoutProfit] = useState(0)\r\n    const [maxPrice, setMaxPrice] = useState(0)\r\n\r\n    const squareBasket = new SquareBasket()\r\n\r\n    useEffect(() => {\r\n        squareBasket.side1 = side1\r\n        squareBasket.side2 = side2\r\n        squareBasket.height = height\r\n        setBaseArea(squareBasket.baseArea)\r\n        setSideArea(squareBasket.sideArea)\r\n        setTotalArea(squareBasket.totalArea)\r\n        setWireWeight(squareBasket.wireWeight)\r\n        setEstimulatedTime(squareBasket.estimulatedTime)\r\n        setRealTime(squareBasket.realTime)\r\n        setWirePrice(squareBasket.wirePrice)\r\n        setLaborPrice(squareBasket.laborPrice)\r\n        setTotalWithoutProfit(squareBasket.totalWithoutProfit)\r\n        setMaxPrice(squareBasket.maxPrice)\r\n    }, [side1, side2, height])\r\n\r\n    function maskNumber(n: number): string {\r\n        return String(n.toFixed(2)).replace('.', ',')\r\n    }\r\n\r\n    return (\r\n        <SafeAreaView>\r\n            <ScrollView style={{ margin: 8 }}>\r\n                <NumberInput onChangeNumber={setSide1} placeholder=\"Lado 1 (cm)\" inputName=\"Lado 1\" />\r\n                <NumberInput onChangeNumber={setSide2} placeholder=\"Lado 2 (cm)\" inputName=\"Lado 2\" />\r\n                <NumberInput onChangeNumber={setHeight} placeholder=\"Altura (cm)\" inputName=\"Altura\" />\r\n\r\n                <View style={{ padding: 8 }}>\r\n                    <View style={styles.containerShowNumber}>\r\n                        <ShowNumber unit=\"cm²\" name=\"Área da base\">{maskNumber(baseArea)}</ShowNumber>\r\n                        <ShowNumber unit=\"cm²\" name=\"Área lateral\">{maskNumber(sideArea)}</ShowNumber>\r\n                        <ShowNumber unit=\"cm²\" name=\"Área total\">{maskNumber(totalArea)}</ShowNumber>\r\n                        <ShowNumber type=\"weight\" unit=\"Kg\" name=\"Peso em fio\">{maskNumber(wireWeight)}</ShowNumber>\r\n                        <ShowNumber type=\"time\" unit=\"h\" name=\"Tempo estimado\">{maskNumber(estimulatedTime)}</ShowNumber>\r\n                        <ShowNumber type=\"money\" name=\"Preço em fio\">R$ {maskNumber(wirePrice)}</ShowNumber>\r\n                        <ShowNumber type=\"money\" name=\"Preço mão de obra\">R$ {maskNumber(laborPrice)}</ShowNumber>\r\n                        <ShowNumber type=\"money\" name=\"Preço sem lucro\">R$ {maskNumber(totalWithoutProfit)}</ShowNumber>\r\n                        <ShowNumber type=\"money\" name=\"Preço máximo\">R$ {maskNumber(maxPrice)}</ShowNumber>\r\n                    </View>\r\n                </View>\r\n            </ScrollView>\r\n        </SafeAreaView>\r\n    )\r\n}\r\n\r\nexport default CalculatorSquareBasket","class CircularBasket {\r\n    private _diameter: number = 0\r\n    private _height: number = 0\r\n\r\n    private _baseArea: number = 0\r\n    private _sideArea: number = 0\r\n    private _totalArea: number = 0\r\n    private _wireWeight: number = 0\r\n    private _estimulatedTime: number = 0\r\n    private _realTime: number = 0\r\n    private _wirePrice: number = 0\r\n    private _laborPrice: number = 0\r\n    private _totalWithoutProfit: number = 0\r\n    private _maxPrice: number = 0\r\n\r\n    get diameter(): number { return this._diameter }\r\n    get height(): number { return this._height }\r\n\r\n    get baseArea(): number { return this._baseArea }\r\n    get sideArea(): number { return this._sideArea }\r\n    get totalArea(): number { return this._totalArea }\r\n    get wireWeight(): number { return this._wireWeight }\r\n    get estimulatedTime(): number { return this._estimulatedTime }\r\n    get realTime(): number { return this._realTime }\r\n    get wirePrice(): number { return this._wirePrice }\r\n    get laborPrice(): number { return this._laborPrice }\r\n    get totalWithoutProfit(): number { return this._totalWithoutProfit }\r\n    get maxPrice(): number { return this._maxPrice }\r\n\r\n    set diameter(value: number) {\r\n        this._diameter = value\r\n        this.calculate()\r\n    }\r\n\r\n    set height(value: number) {\r\n        this._height = value\r\n        this.calculate()\r\n    }\r\n\r\n    private getMaxPrice(price: number): number {\r\n        if (price == 0) return 0\r\n        else if (price < 6) return 12\r\n        else if (price < 10) return 15\r\n        else if (price < 12) return 18\r\n        else if (price < 15) return 22\r\n        else if (price < 18) return 28\r\n        else if (price < 22) return 32\r\n        else if (price < 25) return 35\r\n        else if (price < 30) return 40\r\n        else if (price < 35) return 45\r\n        else if (price < 40) return 50\r\n        else if (price < 45) return 55\r\n        else if (price < 48) return 60\r\n        else if (price < 52) return 65\r\n        else if (price < 55) return 70\r\n        else if (price < 58) return 75\r\n        else if (price < 62) return 80\r\n        else if (price < 66) return 85\r\n        else if (price < 70) return 90\r\n        else if (price < 74) return 95\r\n        else if (price < 80) return 100\r\n        else if (price < 84) return 105\r\n        else if (price < 88) return 110\r\n        else if (price < 92) return 115\r\n        else if (price < 96) return 120\r\n        else if (price < 100) return 125\r\n        else if (price < 104) return 130\r\n        else if (price < 108) return 140\r\n        else if (price < 108) return 135\r\n        else if (price < 112) return 140\r\n        else if (price < 116) return 145\r\n        else if (price < 120) return 150\r\n        else if (price < 124) return 155\r\n        else if (price < 128) return 160\r\n        else if (price < 132) return 165\r\n        else if (price < 136) return 170\r\n        else if (price < 140) return 175\r\n        else if (price < 144) return 180\r\n        else if (price < 148) return 185\r\n        else if (price < 152) return 190\r\n        else if (price < 156) return 195\r\n        else if (price < 160) return 200\r\n        else if (price < 164) return 205\r\n        else if (price < 168) return 210\r\n        else if (price < 172) return 215\r\n        else if (price < 176) return 220\r\n        else if (price < 180) return 225\r\n        else if (price < 184) return 230\r\n        else if (price < 188) return 235\r\n        else if (price < 192) return 240\r\n        else if (price < 196) return 245\r\n        else if (price < 200) return 250\r\n        else return price * 1.25\r\n    }\r\n\r\n    private calculate() {\r\n        this._baseArea = Math.PI * ((this._diameter / 2) ** 2)\r\n        this._sideArea = 2 * Math.PI * (this._diameter / 2) * this._height\r\n        this._totalArea = this._baseArea + this._sideArea\r\n        this._wireWeight = this._totalArea / 2800\r\n        this._estimulatedTime = this._totalArea / 800\r\n        this._wirePrice = (this._totalArea / 2800) * 20\r\n        this._laborPrice = Math.max(this._estimulatedTime, this._realTime) * 10\r\n        this._totalWithoutProfit = this._wirePrice + this._laborPrice\r\n\r\n        // this._maxPrice = this._totalWithoutProfit < 80 ? this._totalWithoutProfit : this._totalWithoutProfit * 1.25\r\n        this._maxPrice = this.getMaxPrice(this._totalWithoutProfit)\r\n    }\r\n}\r\n\r\nexport default CircularBasket","import React from 'react'\r\nimport { StyleSheet } from 'react-native'\r\n\r\nimport colors from '../../res/colors'\r\n\r\nconst styles = StyleSheet.create({\r\n    containerShowNumber: {\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-around\",\r\n    }\r\n})\r\n\r\nexport default styles","import React, { useState, useEffect } from 'react'\r\nimport { View, Text, ScrollView, SafeAreaView, TextInput } from 'react-native'\r\nimport NumberInput from '../../components/NumberInput/NumberInput'\r\nimport ShowNumber from '../../components/ShowNumber/ShowNumber'\r\n\r\nimport CircularBasket from '../../models/CircularBasket'\r\nimport styles from './styles'\r\n\r\nconst CalculatorCircularBasket = () => {\r\n    const [diameter, setDiameter] = useState(0)\r\n    const [height, setHeight] = useState(0)\r\n\r\n    const [baseArea, setBaseArea] = useState(0)\r\n    const [sideArea, setSideArea] = useState(0)\r\n    const [totalArea, setTotalArea] = useState(0)\r\n    const [wireWeight, setWireWeight] = useState(0)\r\n    const [estimulatedTime, setEstimulatedTime] = useState(0)\r\n    const [realTime, setRealTime] = useState(0)\r\n    const [wirePrice, setWirePrice] = useState(0)\r\n    const [laborPrice, setLaborPrice] = useState(0)\r\n    const [totalWithoutProfit, setTotalWithoutProfit] = useState(0)\r\n    const [maxPrice, setMaxPrice] = useState(0)\r\n\r\n    const circularBasket = new CircularBasket()\r\n\r\n    useEffect(() => {\r\n        circularBasket.diameter = diameter\r\n        circularBasket.height = height\r\n        setBaseArea(circularBasket.baseArea)\r\n        setSideArea(circularBasket.sideArea)\r\n        setTotalArea(circularBasket.totalArea)\r\n        setWireWeight(circularBasket.wireWeight)\r\n        setEstimulatedTime(circularBasket.estimulatedTime)\r\n        setRealTime(circularBasket.realTime)\r\n        setWirePrice(circularBasket.wirePrice)\r\n        setLaborPrice(circularBasket.laborPrice)\r\n        setTotalWithoutProfit(circularBasket.totalWithoutProfit)\r\n        setMaxPrice(circularBasket.maxPrice)\r\n    }, [diameter, height])\r\n\r\n    function maskNumber(n: number): string {\r\n        return String(n.toFixed(2)).replace('.', ',')\r\n    }\r\n\r\n    return (\r\n        <SafeAreaView>\r\n            <ScrollView style={{ margin: 8 }}>\r\n                <NumberInput onChangeNumber={setDiameter} placeholder=\"Diâmetro (cm)\" inputName=\"Diâmetro\" />\r\n                <NumberInput onChangeNumber={setHeight} placeholder=\"Altura (cm)\" inputName=\"Altura\" />\r\n\r\n                <View style={{ padding: 8 }}>\r\n                    <View style={styles.containerShowNumber}>\r\n                        <ShowNumber unit=\"cm²\" name=\"Área da base\">{maskNumber(baseArea)}</ShowNumber>\r\n                        <ShowNumber unit=\"cm²\" name=\"Área lateral\">{maskNumber(sideArea)}</ShowNumber>\r\n                        <ShowNumber unit=\"cm²\" name=\"Área total\">{maskNumber(totalArea)}</ShowNumber>\r\n                        <ShowNumber type=\"weight\" unit=\"Kg\" name=\"Peso em fio\">{maskNumber(wireWeight)}</ShowNumber>\r\n                        <ShowNumber type=\"time\" unit=\"h\" name=\"Tempo estimado\">{maskNumber(estimulatedTime)}</ShowNumber>\r\n                        <ShowNumber type=\"money\" name=\"Preço em fio\">R$ {maskNumber(wirePrice)}</ShowNumber>\r\n                        <ShowNumber type=\"money\" name=\"Preço mão de obra\">R$ {maskNumber(laborPrice)}</ShowNumber>\r\n                        <ShowNumber type=\"money\" name=\"Preço sem lucro\">R$ {maskNumber(totalWithoutProfit)}</ShowNumber>\r\n                        <ShowNumber type=\"money\" name=\"Preço máximo\">R$ {maskNumber(maxPrice)}</ShowNumber>\r\n                    </View>\r\n                </View>\r\n            </ScrollView>\r\n        </SafeAreaView>\r\n    )\r\n}\r\n\r\nexport default CalculatorCircularBasket","import React from 'react'\r\nimport { NavigationContainer } from '@react-navigation/native'\r\nimport { createStackNavigator } from '@react-navigation/stack'\r\nimport colors from './res/colors'\r\n\r\n\r\nimport Home from './pages/Home/Home'\r\nimport CalculatorSquareBasket from './pages/CalculatorSquareBasket/CalculatorSquareBasket'\r\nimport CalculatorCircularBasket from './pages/CalculatorCircularBasket/CalculatorCircularBasket'\r\n\r\nconst Stack = createStackNavigator()\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <NavigationContainer>\r\n            <Stack.Navigator screenOptions={{\r\n                headerTintColor: 'white',\r\n                headerStyle: {\r\n                    backgroundColor: colors.primary\r\n                },\r\n                cardStyle: {\r\n                    backgroundColor: colors.background\r\n                }\r\n            }}>\r\n                <Stack.Screen name=\"Home\" component={Home} options={{ title: \"Início\" }} />\r\n                <Stack.Screen name=\"CalculatorSquareBasket\" component={CalculatorSquareBasket} options={{ title: \"Cestos quadrados\" }} />\r\n                <Stack.Screen name=\"CalculatorCircularBasket\" component={CalculatorCircularBasket} options={{ title: \"Cestos circulares\" }} />\r\n            </Stack.Navigator>\r\n        </NavigationContainer>\r\n    )\r\n}\r\n\r\nexport default Routes","import React from 'react'\r\nimport { StatusBar, SafeAreaView } from 'react-native'\r\n\r\nimport Routes from './src/routes'\r\nimport colors from './src/res/colors'\r\n\r\nexport default function App() {\r\n    return (\r\n        <>\r\n            <StatusBar backgroundColor={colors.primary}></StatusBar>\r\n            <Routes />\r\n        </>\r\n    )\r\n}\r\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/calculadora-cestos/expo-service-worker.js', { scope: '/calculadora-cestos/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}